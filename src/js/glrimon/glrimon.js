// Generated by CoffeeScript 1.6.1
var layer_url, map, querySites;

map = {};

layer_url = "http://umd-cla-gis01.d.umn.edu:6080/arcgis/rest/services/NRRI/glritest000/MapServer";

querySites = function(e) {
  var def, pad, popupTemplate, q, qt, queryGeom;
  pad = map.extent.getWidth() / map.width * 5;
  queryGeom = new esri.geometry.Extent(e.mapPoint.x - pad, e.mapPoint.y - pad, e.mapPoint.x + pad, e.mapPoint.y + pad, map.spatialReference);
  console.log(map.spatialReference);
  q = new esri.tasks.Query();
  q.outSpatialReference = {
    "wkid": 102100
  };
  q.returnGeometry = true;
  q.outFields = ["site", "name", "geomorph"];
  q.geometry = queryGeom;
  popupTemplate = new esri.dijit.PopupTemplate({
    title: "{site}",
    fieldInfos: [
      {
        fieldName: "site",
        visible: true,
        label: "site: "
      }, {
        fieldName: "name",
        visible: true,
        label: "name: "
      }, {
        fieldName: "geomorph",
        visible: true,
        label: "geomorph: "
      }
    ]
  });
  qt = new esri.tasks.QueryTask(layer_url + '/0');
  console.log(['q', q]);
  def = qt.execute(q);
  def.addCallback(function(result) {
    console.log(['result', result]);
    return dojo.map(result.features, function(f) {
      console.log(['f', f]);
      f.setInfoTemplate(popupTemplate);
      return f;
    });
  });
  map.infoWindow.setFeatures([def]);
  return map.infoWindow.show(e.screenPoint, map.getInfoWindowAnchor(e.screenPoint));
};

require(['esri/map', 'esri/layers/ArcGISDynamicMapServiceLayer', "esri/layers/WMSLayer", 'esri/layers/FeatureLayer', 'esri/dijit/Legend', 'esri/tasks/query', 'dojo/_base/array', 'dojo/parser', 'esri/dijit/BasemapGallery', 'esri/arcgis/utils', 'esri/dijit/Popup', 'esri/dijit/PopupTemplate', 'dojo/dom-class', 'dojo/dom-construct', 'dojo/on', 'dojox/charting/Chart', 'dojox/charting/themes/Dollar', 'dijit/layout/BorderContainer', 'dijit/layout/ContentPane', 'dijit/layout/AccordionContainer', 'dijit/TitlePane', 'dojo/domReady!'], function(Map, ArcGISDynamicMapServiceLayer, WMSLayer, FeatureLayer, Legend, query, arrayUtils, parser, BasemapGallery, arcgisUtils, Popup, PopupTemplate, domClass, domConstruct, On, Chart, theme) {
  var basemapGallery, popup, rivers, template;
  parser.parse();
  popup = Popup({
    titleInBody: false
  }, domConstruct.create("div"));
  map = new Map("map", {
    basemap: "topo",
    center: [-90, 44],
    zoom: 6,
    infoWindow: popup
  });
  domClass.add(map.infoWindow.domNode, "myTheme");
  template = new PopupTemplate({
    title: "Boston Marathon 2013",
    description: "{Percent_Fi} of starters from {STATE_NAME} finished",
    fieldInfos: [
      {
        fieldName: "Number_Ent",
        label: "Entrants"
      }, {
        fieldName: "Number_Sta",
        label: "Starters"
      }, {
        fieldName: "Number_Fin",
        label: "Finishers"
      }
    ],
    mediaInfos: []
  });
  rivers = new ArcGISDynamicMapServiceLayer(layer_url, {
    mode: ArcGISDynamicMapServiceLayer.MODE_ONDEMAND,
    outFields: ["*"],
    infoTemplate: template
  });
  basemapGallery = new BasemapGallery({
    showArcGISBasemaps: true,
    map: map
  }, "basemapGallery");
  basemapGallery.startup();
  map.on("layers-add-result", function(evt) {
    var layerInfo, legendDijit;
    layerInfo = arrayUtils.map(evt.layers, function(layer, index) {
      return {
        layer: layer.layer,
        title: layer.layer.name
      };
    });
    if (layerInfo.length > 0) {
      legendDijit = new Legend({
        map: map,
        layerInfos: layerInfo
      }, "legendDiv");
    }
    return legendDijit.startup();
  });
  map.addLayers([rivers]);
  return dojo.connect(map, 'onClick', querySites);
});
